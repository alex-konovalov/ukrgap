<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
                                                                        
              
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Вычисления в групповых кольцах с помощью пакета LAGUNA</title>
  <meta name="description"
 content="Calculations in group rings with LAGUNA package">
</head>
  <body>
                                           
<div align="left">
<div align="left">
<div align="left">
<div align="left"> 
<ul>
   <font face="Helvetica, Arial, sans-serif"><small>   </small></font> 
</ul>
     <a href="http://www.zsu.zp.ua/ppages/konoval/konov.htm"><i><font
 face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">Вернуться к
списку примеров</a></font></font></i>  </a>
<hr width="100%" size="2">   </div>
      </div>
         
<center></center>
      </div>
               
<p align="center"><b><small><font face="Helvetica, Arial, sans-serif">Вычисления
в групповых кольцах с помощью пакета LAGUNA 3.0</font></small></b></p>
         
<center> </center>
   
<div align="center"><font face="Helvetica, Arial, sans-serif"><b></b></font></div>
 
<div align="center"> 
<div align="left"><font face="Helvetica, Arial, sans-serif"><small>Пакет
<b>LAGUNA 3.0</b> расширяет возможности <b>GAP 4.3</b> для работы с групповыми
кольцами. Название пакета означает "<b>L</b>ie <b>A</b>l<b>G</b>ebras and
<b>UN</b>its of group <b>A</b>lgebras". Кроме определения некоторых общих
характеристик групповых колец и их элементов, <b>LAGUNA </b>позволяет исследовать
Лиевские свойства группового кольца конечной группы и вычислять нормированную
мультипликативную группу модулярной групповой алгебры конечной <i>р</i>-группы
над полем из <i>р</i> элементов. Домашняя страница пакета <b>LAGUNA </b>c
дальнейшей информацией о нем, документацией и дистрибутивом находится по
адресу <a href="http://www.cs.st-andrews.ac.uk/~alexk/laguna/">http://www.cs.st-andrews.ac.uk/~alexk/laguna/</a>. 
<br>
 <br>
 Для демонстрации возможностей пакета <b>LAGUNA </b>выполним некоторые вычисления 
в групповой алгебре группы диэдра порядка 16 над полем из двух элементов. 
Вначале мы создадим эту групповую алгебру:</small></font><br>
 <tt><br>
 <b>gap&gt; K := GF( 2 );<br>
 GF(2)<br>
 gap&gt; G := DihedralGroup( 16 );<br>
 &lt;pc group of size 16 with 4 generators&gt;<br>
 gap&gt; KG := GroupRing( K, G );<br>
 &lt;algebra-with-one over GF(2), with 4 generators&gt;</b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Некоторые свойства и атрибуты групповой алгебры <b>KG </b>могут быть получены 
сразу же, так как являются прямым следствием ее определения:</font></small><br>
 <br>
 <tt><b>gap&gt; IsGroupAlgebra( KG ); <br>
 true<br>
 gap&gt; IsPModularGroupAlgebra( KG );<br>
 true<br>
 gap&gt; IsFModularGroupAlgebra( KG );<br>
 true<br>
 gap&gt; UnderlyingGroup( KG );<br>
 &lt;pc group of size 16 with 4 generators&gt;<br>
 gap&gt; LeftActingDomain( KG );<br>
 GF(2)</b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Так как <b>KG </b>является групповой алгеброй, то информация, хранимая в 
атрибуте </font><big><tt><b>LeftActingDomain</b></tt></big>, <font
 face="Helvetica, Arial, sans-serif">также может быть получена двумя другими 
способами:</font></small><br>
 <br>
 <tt><b>gap&gt; UnderlyingRing( KG );<br>
 GF(2)<br>
 gap&gt; UnderlyingField( KG );<br>
 GF(2)</b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Построим некоторый элемент данной групповой алгебры. Например, возьмем минимальную 
систему порождающих элементов группы <b>G </b>и найдем соответствующие им 
элементы в <b>KG</b>:</font></small><br>
 <br>
 <tt><b>gap&gt; MinimalGeneratingSet( G );<br>
 [ f1, f2 ]<br>
 gap&gt; l := List( last, g -&gt; g^Embedding( G, KG ) );<br>
 [ (Z(2)^0)*f1, (Z(2)^0)*f2 ]</b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Теперь зададим элемент <b>x </b>следующим образом:</font></small><br>
 <tt><br>
 <b>gap&gt; a :=l[1]; b:=l[2]; # a и b - образы порождающих элементов группы 
в KG<br>
 (Z(2)^0)*f1<br>
 (Z(2)^0)*f2<br>
 gap&gt; e := One( KG );    # для удобства, обозначим нейтральный элемент 
через e<br>
 (Z(2)^0)*&lt;identity&gt; of ...<br>
 gap&gt; x := ( e + a ) * ( e + b ); <br>
 (Z(2)^0)*&lt;identity&gt; of ...+(Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f1*f2  
</b></tt><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Исследуем некоторые основные 
свойства этого элемента:</font></small><br>
 <b><br>
 <tt>gap&gt; Support( x );<br>
 [ &lt;identity&gt; of ..., f1, f2, f1*f2 ]<br>
 gap&gt; CoefficientsBySupport( x );<br>
 [ Z(2)^0, Z(2)^0, Z(2)^0, Z(2)^0 ]<br>
 gap&gt; Length( x );<br>
 4<br>
 gap&gt; TraceOfMagmaRingElement( x );<br>
 Z(2)^0</tt></b><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Мы можем также вычислить 
сумму коэффициентов элемента <b>x</b>:</font></small><br>
 <br>
 <tt><b>gap&gt; Augmentation( x );<br>
 0*Z(2)<br>
 gap&gt; IsUnit( KG, x );<br>
 false</b></tt><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Так как сумма коэффициентов 
равна нулю, то <b>x</b> не является обратимым, но <b>1+x</b> - обратим. Это 
также легко проверить:</font></small><br>
 <br>
 <tt><b>gap&gt; y := e + x;<br>
 (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f1*f2<br>
 gap&gt; IsUnit( KG, y );<br>
 true  </b></tt><br>
 <br>
 <font face="Helvetica, Arial, sans-serif"><small>Обратный элемент к <b>1+x</b> 
вычисляется очень легко:</small></font><br>
 <br>
 <tt><b>gap&gt; y^-1;<br>
 (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^0)*f1*f2+(Z(2)^0)*f1*f3+(<br>
 Z(2)^0)*f1*f4+(Z(2)^0)*f2*f4+(Z(2)^0)*f1*f2*f4+(Z(2)^0)*f2*f3*f4+(Z(2)^<br>
 0)*f1*f2*f3*f4</b></tt><br>
 <br>
 <font face="Helvetica, Arial, sans-serif"><small>Проверим, что получен в 
действительности обратный элемент:</small></font><br>
 <br>
 <tt><b>gap&gt; y * y^-1;<br>
 (Z(2)^0)*&lt;identity&gt; of ... </b></tt><br>
 <br>
 <font face="Helvetica, Arial, sans-serif"><small>Мы можем также проверить, 
является ли <b>y</b> симметричным (т.е., инвариантным относительно классической 
инволюции), а также является ли <b>y</b> унитарным (т.е., переводится классической 
инволюцией в элемент, обратный к <b>y</b>). В данном случае ни то, ни другое 
условие не выполняется:</small></font><br>
 <br>
 <tt><b>gap&gt; Involution( y );<br>
 (Z(2)^0)*f1+(Z(2)^0)*f1*f2+(Z(2)^0)*f2*f3*f4<br>
 gap&gt; y = Involution( y );<br>
 false<br>
 gap&gt; y * Involution( y );<br>
 (Z(2)^0)*&lt;identity&gt; of ...+(Z(2)^0)*f2+(Z(2)^0)*f2*f3*f4  </b></tt><br>
 <font face="Helvetica, Arial, sans-serif"><small><br>
 Теперь вычислим некоторые важные идеалы групповой алгебры <b>KG</b>. Сначала 
получим фундаментальный идеал, который совпадает с множеством элементов, у
которых сумма коэффициентов равна нулю. В нашем случае он совпадает с радикалом 
групповой алгебры:</small></font><br>
 <br>
 <tt><b>gap&gt; AugmentationIdeal( KG );<br>
 &lt;two-sided ideal in &lt;algebra-with-one of dimension 16 over GF(2)&gt;, 
<br>
   (dimension 15)&gt;<br>
 gap&gt; AugmentationIdeal( KG ) = RadicalOfAlgebra( KG );<br>
 true</b></tt><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Хорошо известно, что в
данном случае фундаментальный идеал является нильпотентным идеалом. Используя
теорию размерностных подгрупп, мы можем вычислить его индекс нильпотентности
без непосредственного вычисления степеней фундаментального идела:</font></small><br>
 <br>
 <tt><b>gap&gt; AugmentationIdealNilpotencyIndex( KG );<br>
 9</b></tt><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">С другой стороны, мы можем 
вычислить и степени фундаментального идела:</font></small><br>
 <br>
 <tt><b>gap&gt; AugmentationIdealPowerSeries( KG );<br>
 [ &lt;algebra of dimension 15 over GF(2)&gt;, &lt;algebra of dimension 13 
over GF(2)&gt;, <br>
   &lt;algebra of dimension 11 over GF(2)&gt;, &lt;algebra of dimension 9 
over GF(2)&gt;, <br>
   &lt;algebra of dimension 7 over GF(2)&gt;, &lt;algebra of dimension 5
over GF(2)&gt;, <br>
   &lt;algebra of dimension 3 over GF(2)&gt;, &lt;algebra of dimension 1
over GF(2)&gt;, <br>
   &lt;algebra over GF(2)&gt; ]</b></tt><br>
 <font face="Helvetica, Arial, sans-serif"><small><br>
 Как видно, длина данного списка совпадает с полученным ранее индексом нильпотентности.<br>
 <br>
 Теперь покажем, как работать с мультипликативной группой групповой алгебры 
<b>KG</b>. Сначала вычислим нормированную мультипликативную группу, состоящую 
из элементов, у которых сумма коэффициентов равна единице. Эта группа может 
быть вычислена очень быстро, но дальнейшие вычисления в ней малоэффективны:</small></font><br>
 <br>
 <tt><b>gap&gt; V := NormalizedUnitGroup( KG );<br>
 &lt;group of size 32768 with 15 generators&gt;   </b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Для того, чтобы сделать возможными эффективные вычисления в нормированной 
мультипликативной группе, вычислим изоморфную ей рс-группу:</font></small><br>
 <br>
 <tt><b>gap&gt; W := PcNormalizedUnitGroup( KG );<br>
 &lt;pc group of size 32768 with 15 generators&gt;</b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 В системе <b>GAP </b>имеется много мощных алгортмов для рс-групп, и теперь 
они все доступны нам для изучения структуры нормированной мультипликативной 
группы. Для того, чтобы иметь возможность интерпретировать их результаты в
групповой алгебре, нужно установить изоморфизм между нормированной мультипликативной 
группой, порожденной элементами групповой алгебры, и ее рс-представлением.</font></small><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Первый из изоморфизмов
отображает </font><big><tt><b>NormalizedUnitGroup(KG)</b></tt></big><font
 face="Helvetica, Arial, sans-serif"> в ее рс-представление <b>PcNormalizedUnitGroup(PC)</b>. 
Найдем с его помощью образы элементов группы <b>G </b>в <b>W</b>:</font></small><br>
 <br>
 <tt><b>gap&gt; t := NaturalBijectionToPcNormalizedUnitGroup( KG );<br>
 MappingByFunction( &lt;group of size 32768 with 15 generators&gt;, &lt;pc 
group of size<br>
 32768 with 15 generators&gt;, function( x ) ... end )<br>
 gap&gt; List( AsList( G ), x -&gt; ( x^Embedding( G, KG ) )^t );<br>
 [ &lt;identity&gt; of ..., f2, f1, f3, f7, f1*f2*f3, f2*f3, f2*f7, f1*f3, 
f1*f7, f3*f7,<br>
   f1*f2*f7, f1*f2*f3*f7, f2*f3*f7, f1*f3*f7, f1*f2 ]   </b></tt><br>
 <br>
 <font face="Helvetica, Arial, sans-serif"><small>Второй изоморфизм является 
обратным к предыдущему:</small></font><br>
 <tt><b><br>
 gap&gt; f := NaturalBijectionToNormalizedUnitGroup( KG );<br>
 [ f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15 ] -&gt;<br>
 [ (Z(2)^0)*f2, (Z(2)^0)*f1, (Z(2)^0)*f3, (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f1*f2,<br>
   (Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f2*f3, (Z(2)^0)*f1+(Z(2)^0)*f3+(Z(2)^0)*f1*f3,<br>
   (Z(2)^0)*f4, (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f1*f2+(Z(2)^0)*f1*f3+(<br>
     Z(2)^0)*f2*f3+(Z(2)^0)*f1*f2*f3, (Z(2)^0)*f2+(Z(2)^0)*f4+(Z(2)^0)*f2*f4,<br>
   (Z(2)^0)*f1+(Z(2)^0)*f4+(Z(2)^0)*f1*f4, (Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^0)*f3*f4,<br>
   (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f4+(Z(2)^0)*f1*f2+(Z(2)^0)*f1*f4+(Z(2)^<br>
     0)*f2*f4+(Z(2)^0)*f1*f2*f4, (Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^<br>
     0)*f2*f3+(Z(2)^0)*f2*f4+(Z(2)^0)*f3*f4+(Z(2)^0)*f2*f3*f4,<br>
   (Z(2)^0)*f1+(Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^0)*f1*f3+(Z(2)^0)*f1*f4+(Z(2)^<br>
     0)*f3*f4+(Z(2)^0)*f1*f3*f4, (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f4+(<br>
     Z(2)^0)*f1*f2+(Z(2)^0)*f1*f3+(Z(2)^0)*f1*f4+(Z(2)^0)*f2*f3+(Z(2)^0)*f2*f4+(<br>
     Z(2)^0)*f3*f4+(Z(2)^0)*f1*f2*f3+(Z(2)^0)*f1*f2*f4+(Z(2)^0)*f1*f3*f4+(Z(2)^<br>
     0)*f2*f3*f4+(Z(2)^0)*f1*f2*f3*f4 ]  </b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 В качестве примера вычислим классы сопряженных элементов группы <b>W</b>, 
а затем найдем представитель одного из классов в групповой алгебре <b>KG</b>:</font></small><br>
 <br>
 <tt><b>gap&gt; cc := ConjugacyClasses( W );;<br>
 gap&gt; Length( cc );<br>
 848<br>
 gap&gt; Representative( cc[ Length( cc ) ] );<br>
 f1*f2*f4*f6*f12*f15<br>
 gap&gt; last^f;<br>
 (Z(2)^0)*&lt;identity&gt; of ...+(Z(2)^0)*f2+(Z(2)^0)*f4+(Z(2)^0)*f1*f2+(Z(2)^0)*f1*f3+(<br>
 Z(2)^0)*f1*f4+(Z(2)^0)*f2*f3+(Z(2)^0)*f2*f4+(Z(2)^0)*f3*f4+(Z(2)^0)*f1*f2*f3+(Z(2)^<br>
 0)*f1*f3*f4   </b><br>
 </tt><br>
 <small><font face="Helvetica, Arial, sans-serif">Имея pc-представление нормированной 
мультипликативной группы, мы можем использовать всю мощь имеющихся в <b>GAP 
</b>методов для рс-групп. Например, очень быстро вычисляется ее нижний центральный 
ряд: <br>
 </font></small><br>
 <tt><b>gap&gt; LowerCentralSeries( W );<br>
 [ &lt;pc group of size 32768 with 15 generators&gt;,<br>
   Group([ f3, f5*f8*f10*f12*f13*f14*f15, f6*f8*f12*f14*f15, f7, f9*f12,
f10*f14,<br>
       f11*f13, f13*f14, f14*f15 ]),<br>
   Group([ f7, f9*f12, f10*f15, f11*f15, f13*f15, f14*f15 ]),<br>
   Group([ f11*f15, f13*f15, f14*f15 ]), Group([ &lt;identity&gt; of ...
]) ]  </b></tt><br>
 <small><font face="Helvetica, Arial, sans-serif"><br>
 Допустим, необходимо найти минимальную систему порождающих элементов центра 
нормированной мультипликативной группы. Сначала мы произведем вычисления в
рс-группе, а затем отобразим результат в групповую алгебру:</font></small><br>
 <br>
 <tt><b>gap&gt; C := Centre( W );<br>
 Group([ f3*f5*f13*f15, f7, f15, f13*f15, f14*f15, f11*f13*f14*f15 ])<br>
 gap&gt; m := MinimalGeneratingSet( C );<br>
 [ f11, f13, f14, f15, f3*f5*f13*f15 ]<br>
 gap&gt; List( m, g -&gt; g^f );<br>
 [ (Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^0)*f3*f4, (Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f4+(<br>
     Z(2)^0)*f2*f3+(Z(2)^0)*f2*f4+(Z(2)^0)*f3*f4+(Z(2)^0)*f2*f3*f4,<br>
   (Z(2)^0)*f1+(Z(2)^0)*f3+(Z(2)^0)*f4+(Z(2)^0)*f1*f3+(Z(2)^0)*f1*f4+(Z(2)^<br>
     0)*f3*f4+(Z(2)^0)*f1*f3*f4, (Z(2)^0)*f1+(Z(2)^0)*f2+(Z(2)^0)*f3+(Z(2)^0)*f4+(<br>
     Z(2)^0)*f1*f2+(Z(2)^0)*f1*f3+(Z(2)^0)*f1*f4+(Z(2)^0)*f2*f3+(Z(2)^0)*f2*f4+(<br>
     Z(2)^0)*f3*f4+(Z(2)^0)*f1*f2*f3+(Z(2)^0)*f1*f2*f4+(Z(2)^0)*f1*f3*f4+(Z(2)^<br>
     0)*f2*f3*f4+(Z(2)^0)*f1*f2*f3*f4, (Z(2)^0)*f1+(Z(2)^0)*f4+(Z(2)^0)*f1*f2+(Z(2)^<br>
     0)*f1*f3+(Z(2)^0)*f1*f4+(Z(2)^0)*f2*f3+(Z(2)^0)*f2*f4+(Z(2)^0)*f1*f2*f3+(Z(2)^<br>
     0)*f1*f2*f4+(Z(2)^0)*f1*f3*f4+(Z(2)^0)*f1*f2*f3*f4 ]    </b></tt><br>
 <br>
 <small><font face="Helvetica, Arial, sans-serif">Мы закончим демонстрацию 
пакета <b>LAGUNA </b>определением некоторых Лиевских свойств групповой алгебры 
<b>KG</b>, понятных из названия используемых в этом примере функций:</font></small><br>
 <br>
 <b><tt>gap&gt; L := LieAlgebra( KG );<br>
 &lt;Lie algebra of dimension 16 over GF(2)&gt;<br>
 gap&gt; D := LieDerivedSubalgebra( L );<br>
 &lt;Lie algebra of dimension 9 over GF(2)&gt;<br>
 gap&gt; LC := LieCentre( L );<br>
 &lt;Lie algebra of dimension 7 over GF(2)&gt;<br>
 gap&gt; LieLowerNilpotencyIndex( KG );<br>
 5<br>
 gap&gt; LieUpperNilpotencyIndex( KG );<br>
 5<br>
 gap&gt; IsLieAbelian( L );<br>
 false<br>
 gap&gt; IsLieSolvable( L );<br>
 true<br>
 gap&gt; IsLieMetabelian( L );<br>
 false<br>
 gap&gt; IsLieCentreByMetabelian( L );<br>
 true</tt><br>
 </b><br>
 <font face="Helvetica, Arial, sans-serif"><small>Описание всех функций,
используемых в данном примере, содержится в руководстве пользователя, которое
является частью пакета, а также находится на домашней странице пакета <b>LAGUNA
</b>по адресу <a href="http://www.cs.st-andrews.ac.uk/~alexk/laguna/">http://www.cs.st-andrews.ac.uk/~alexk/laguna/</a>. 
</small></font><br>
 </div>
 
<hr width="100%" size="2"></div>
</div>
<a href="http://www.zsu.zp.ua/ppages/konoval/konov.htm"><i><font
 face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">Вернуться к
списку примеров</a></font></font></i></a><br>
</body>
</html>
