<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
                                    
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
                                    
  <meta name="Author" content="Alexander Konovalov">
                                    
  <meta name="GENERATOR" content="Mozilla/4.76 [en]C-CCK-MCD (ITware edition)  (Win95; U) [Netscape]">
  <title>Система компьютерной алгебры GAP - учебные примеры</title>
</head>
  <body>
         <i><font face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">
       Вернуться  к списку примеров</a>
        </font></font></i>         
<center>         
<hr width="100%"> <br>
        <b>Библиотека групп системы GAP </b></center>
           <br>
        <i>На данной странице помещен сокращенный перевод фрагмента главы 
"Библиотеки групп" из справочного руководства   по системе GAP, в котором 
описываются  некоторые виды групп, которые могут быть заданы с помощью стандартных 
функций  системы, в том числе: циклические, абелевы, диэдральные группы,  симметрические
 и знакопеременные группы, группы Матье и Сузуки, стандартные матричные группы.
 Перевод выполнен с участием студентки ЗГУ   Е. А. Шепель. Оригинал данной
 главы на английском языке находится <a href="http://www-gap.dcs.st-and.ac.uk/%7Egap/Manual4/htm/ref/CHAP048.htm">
     здесь</a>
    </i>.<br>
      <br>
   
<hr width="100%" size="2"><br>
  В текущей версии GAP с помощью стандартных функций могут быть заданы следующие 
 группы:<br>
   
<ul>
    <li>некоторые <a href="#basic">основные виды групп</a>
  , например, циклические или симметрические группы;</li>
    <li><a href="#matrix">классические матричные группы</a>
  ;</li>
    <li>транзитивные группы подстановок степени, не превышающей 30;</li>
    <li><a href="#small">группы малых порядков</a>
 (все группы порядка не более 2000, за исключением  групп порядка 1024);</li>
    <li>конечные совершенные группы порядка не более 106 (за исключением
11  порядков);</li>
    <li>примитивные группы подстановок степеней меньше чем 1000 (для степеней
 меньше чем 256 - все такие группы);</li>
    <li>неприводимые разрешимые подгруппы группы GL (n, p) для n&gt;1 и p<sup>
  n</sup> &lt; 256;</li>
    <li>неприводимые максимальные конечные группы целочисленных матриц размерности
 не более 31. </li>
   
</ul>
  Как правило, между группами в разных библиотеках связи нет, и одна и та 
же группа может содержаться в нескольких библиотеках в различных представлениях.
 Заметим, что для инсталляции могут быть выбраны все, несколько или вообще
 ни одна из библиотек. Таким образом, в Вашей инсталляции некоторые из упомянутых
 выше библиотек могут оказаться недоступными. <br>
   <br>
  <br>
  <b><a name="basic"></a>
  Основные виды групп</b><br>
   <br>
  Существует ряд бесконечных бесконечных семейств групп, для задания элементов
 которых необходимо указать одно или несколько чисел. GAP предоставляет различные
 функции для построения этих групп. Эти функции всегда позволяют (но не требуют)
 указать так называемый <i><b>фильтр</b></i>, например, <b>IsPermGroup</b>
  , <b>IsMatrixGroup </b>или <b>IsPcGroup</b>, определяющий, какой вид будеть
 иметь возвращаемая группа. Если фильтр не указывается, то используется его
 значение, заданное по умолчанию. Заметим, что не все фильтры могут быть
применимы  для всех групп, так как могут быть теоретические ограничения (например,
<b>  IsPcGroup </b>работает только для разрешимых групп) или же некоторые
методы  могут быть доступны лишь для нескольких фильтров.<br>
  <br>
  Некоторые фильтры могут допускать дополнительные параметры. Например, группы,
 созданные в категории  <b>IsMatrixGroup</b>, могут вычисляться над определенным
полем, которое указывается в качестве второго аргумента. По умолчанию рассматривается
 поле рациональных чисел.<br>
  <br>
  Функция <b>TrivalGroup ( [ filter ] )</b> создает тривиальную группу в
категории  <b>filter</b>. Если <b>filter</b> не указан, по умолчанию он равен
<b>IsPcGroup</b>  .<br>
  <br>
  <tt>gap&gt; TrivialGroup();<br>
   &lt;pc group of size 1 with 0 generators&gt;<br>
   gap&gt; TrivialGroup( IsPermGroup );<br>
   Group(())</tt><br>
   <br>
  Функция <b>CyclicGroup ( [ filt, ] n ) </b>строит циклическую группу порядка
 <b>n</b> в категории <b>filt</b>. Если <b>filt</b> не указан, по умолчанию
 он равен <b>IsPcGroup</b>.<br>
  <br>
  <tt>gap&gt; CyclicGroup(12);<br>
  &lt;pc group of size 12 with 3 generators&gt;<br>
  gap&gt; CyclicGroup(IsPermGroup,12);<br>
  Group([ (1,2,3,4,5,6,7,8,9,10,11,12) ])<br>
  gap&gt; matgrp1:= CyclicGroup( IsMatrixGroup, 12 );<br>
  &lt;matrix group of size 12 with 1 generators&gt;<br>
  gap&gt; FieldOfMatrixGroup( matgrp1 );<br>
  Rationals<br>
  gap&gt; matgrp2:= CyclicGroup( IsMatrixGroup, GF(2), 12 );<br>
  &lt;matrix group of size 12 with 1 generators&gt;<br>
  gap&gt; FieldOfMatrixGroup( matgrp2 );<br>
  GF(2)<br>
  </tt><br>
  Функция <b>AbelianGroup ( [filt, ] ints )</b> строит абелeву группу в категории
 <b>filt</b>, имеющую тип изоморфизма  <b>С<sub>ints[1]</sub>*С<sub>ints[2]</sub>
  *&#8230;*C</b><sub><b>ints[n</b>]</sub>. <b>Ints </b>должно являться списком
натуральных чисел. Если <b>filt</b> не указан, по умолчанию он равен <b>IsPcGroup</b>
 . Порождающие элементы возвращаемой группы соответствуют элементам списка 
<b>ints</b>.<br>
  <br>
  <tt>gap&gt; AbelianGroup([1,2,3]);<br>
   &lt;pc group of size 6 with 3 generators&gt;<br>
  </tt> <br>
  Функция <b>ElementaryAbelianGroup ( [filt,] n)</b> возвращает элементарную
 абeлeву группу порядка <b>n</b> в категории <b>filt</b>. (по умолчанию <b>
  IsPcGroup</b>).<br>
  <br>
  <tt>gap&gt; ElementaryAbelianGroup(8192);<br>
   &lt;pc group of size 8192 with 13 generators&gt;<br>
  </tt> <br>
  Функция <b>DihedralGroup ( [filt,] n)</b> возвращает группу диэдра порядка
 <b>n</b> в категории <b>filt</b> (по умолчанию <b>IsPcGroup</b>).<br>
  <br>
  <tt> gap&gt; DihedralGroup(10);<br>
   &lt;pc group of size 10 with 2 generators&gt;<br>
  </tt> <br>
  Функция <b>ExtraspecialGroup ( [filt,] order, exp)</b> возвращает экстраспециальную
 группу в категории <b>filt</b> (по умолчанию <b>IsPcGroup</b>). Эта группа
 зависит от параметра <b>exp</b> и имеет порядок <b>order</b>, где <b>order</b>
   имеет вид <b>p<sup>2n+1</sup></b>, где <b>р</b> &#8211; простое число, а <b>
n</b>   &#8211; натуральное. Если р нечетное, то допустимыми значениями <b>exp</b>
 являются  экспонента (т.е. показатель) группы (либо р, либо р<sup>2</sup>
), или же одно один из знаков <tt>'+'</tt>, <tt>"+"</tt>, <tt>'-'</tt>, <tt>
"-"</tt> . Для р=2 допустимы только знаки плюса или минуса.<br>
  <br>
  <tt> gap&gt; ExtraspecialGroup( 27, 3 );<br>
   &lt;pc group of size 27 with 3 generators&gt;<br>
   gap&gt; ExtraspecialGroup( 27, '+' );<br>
   &lt;pc group of size 27 with 3 generators&gt;<br>
   gap&gt; ExtraspecialGroup( 8, "-" );<br>
   &lt;pc group of size 8 with 3 generators&gt;<br>
  </tt> <br>
  Функции <b>AlternatingGroup ( [filt,] deg)</b> и <b>AlternatingGroup (
[filt,]  dom)</b>  возвращают знакопеременную группу степени <b>deg</b> в
категории  <b>filt</b> (по умолчанию <b>IsPcGroup</b>). Во втором варианте
возвращается  знакопеременная группа, действующая на множестве <b>dom</b>
, которое должно  состоять из натуральных чисел.<br>
  <br>
  <tt>gap&gt; AlternatingGroup(5);<br>
   Alt([1..5])<br>
  </tt> <br>
  Функции <b>SymmetricGroup ( [filt,] deg)</b> и <b>SymmetricGroup ( [filt,]
 dom)</b>  возвращают симметрическую группу степени <b>deg </b>в категории
 <b>filt </b>(по умолчанию <b>IsPcGroup</b>). Во втором варианте возвращается
 симметрическая  группа, действующая на множестве <b>dom</b>, которое должно
 состоять из натуральных чисел.<br>
  <br>
  <tt> gap&gt; SymmetricGroup(10);<br>
   Sym([1..10])<br>
  </tt><br>
  Заметим, что методы для работы с группами подстановок особо рассматривают
 симметрические и знакопеременные группы.<br>
   <br>
  Функция <b>MathieuGroup ( [filt,] degree)</b> конструирует группу Матье 
степени <b>degree</b> (которая может принимать значения  [9, 10, 11, 12, 21,
22, 23, 24]), в категории <b>filt</b> (по умолчанию <b>IsPermGroup</b> ).<br>
  <br>
  <tt> gap&gt; MathieuGroup( 11 );<br>
   Group([ ( 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11), ( 3, 7,11, 8)( 4,10, 5, 6) 
])<br>
  </tt> <br>
  Функции <b>SuzukiGroup ( [filt,] q)</b> и <b>Sz ( [filt,] q) </b>конструируют
 группу, изоморфную группе Сузуки Sz(q) над полем из q элементов (где q&gt;=8
 и является нечетной степенью 2) в категории filt (по умолчанию <b>IsMatrixGroup</b>
,  т.е. возвращается сама группа Сузуки).<br>
  <br>
  <tt>gap&gt; SuzukiGroup( 32 );<br>
   Sz(32)<br>
  </tt><br>
  <br>
  <b><a name="matrix"></a>
  Классические матричные группы</b><br>
  <br>
   Следующие функции возвращают классические матричные группы. <li><code>
GeneralLinearGroup(  [</code><var>filt</var><code>, ]</code><var>d</var><code>
, </code><var>q</var><code>   )</code></li>
  <li><code>GL( [</code><var>filt</var><code>, ]</code><var>d</var><code>
,    </code><var>q</var><code> )</code></li>
  <li><code>GeneralLinearGroup( </code><var>d</var><code>, Integers )</code></li>
  <li><code>GL( </code><var>d</var><code>, Integers )</code></li>
  <li><code>GeneralLinearGroup( </code><var>d</var><code>, Integers mod </code><var>
  m</var><code> )</code></li>
  <li><code>GL( </code><var>d</var><code>, Integers mod </code><var>m</var><code>
   )</code>      
  <p>В первых двух вариантах возвращается группа, изоморфную полной линейной
 группе GL( <var>d</var>, <var>q</var> ) матриц размера <i>d</i>  &#215;<i>d</i>
    над полем из <var>q</var> элементов в категории <var>filt</var> (по умолчанию
   <var></var><b><code>IsMatrixGroup</code></b>). Третий и четвертый варианты
строят  группу целочисленных ообратимых матриц размера <i>d</i>  &#215;<i>d</i>
. Последние  два варианта строят полную линейную группу степени <var>d</var>
 над кольцом  классов вычетов Z/<var>m</var>Z. </p>
       
  <pre>gap&gt; GL(4,3);<br>GL(4,3)<br>gap&gt; GL(2,Integers);<br>GL(2,Integers)<br>gap&gt; GL(3,Integers mod 12);<br>GL(3,Z/12Z)<br><br></pre>
  </li>
  <li><code>SpecialLinearGroup( [</code><var>filt</var><code>, ]</code><var>
  d</var><code>, </code><var>q</var><code> )</code></li>
  <li><code>SL( [</code><var>filt</var><code>, ]</code><var>d</var><code>
,    </code><var>q</var><code> )</code></li>
  <li><code>SpecialLinearGroup( </code><var>d</var><code>, Integers )</code></li>
  <li><code>SL( </code><var>d</var><code>, Integers )</code></li>
  <li><code>SpecialLinearGroup( </code><var>d</var><code>, Integers mod </code><var>
  m</var><code> )</code></li>
  <li><code>SL( </code><var>d</var><code>, Integers mod </code><var>m</var><code>
   )</code>      
  <p>Первые две функции строят группу изоморфную специальной линейной группе
 SL( <var>d</var>, <var>q</var> ), состоящей из матриц размера <i>d</i> 
&#215;<i>  d</i>  над полем из <var>q</var> элементов, определитель которых является
 единицей этого поля, в категории <var>filt</var> (по умолчанию <var></var><b><code>
IsMatrixGroup</code></b>). Третья и четвертая функции возвращают группу целочисленных
 матриц с размера <i>d</i>  &#215;<i>d</i>  с определителем 1. Последние два варианта
 строят группу матриц размера <i>d</i>  &#215;<i>d</i>  над кольцом Z/<var>m</var>
  Z с определителем 1 (mod <var>m</var>). </p>
       
  <pre>gap&gt; SpecialLinearGroup(2,2);<br>SL(2,2)<br>gap&gt; SL(3,Integers);<br>SL(3,Integers)<br>gap&gt; SL(4,Integers mod 4);<br>SL(4,Z/4Z)<br><br></pre>
  В руководстве по системе может быть найдена дальнейшая информация о следующих
 функциях, смысл которых понятен из их названий:</li>
 <code></code><code><br>
</code>
<ul>
  <li><code>GeneralUnitaryGroup( [</code><var>filt</var><code>, ]</code><var>
 d</var><code> , q</code><code>)</code></li>
  <li><code>SpecialUnitaryGroup( [</code><var>filt</var><code>, ]</code><var>
 d</var><code> , </code><var>q</var><code> )</code></li>
  <li><code>SymplecticGroup( [</code><var>filt</var><code>, ]</code><var>
d</var><code>  , </code><var>q</var><code> )</code></li>
  <li><code>GeneralOrthogonalGroup( [</code><var>filt</var><code>, ][</code><var>
  e</var><code>, ]</code><var>d</var><code>, </code><var>q</var><code> ) </code></li>
  <li><code>SpecialOrthogonalGroup( [</code><var>filt</var><code>, ][</code><var>
  e</var><code>, ]</code><var>d</var><code>, </code><var>q</var><code> ) </code>
  </li>
  <li><code>ProjectiveGeneralLinearGroup( [</code><var>filt</var><code>,
]</code><var>  d</var><code>, </code><var>q</var><code> )</code> </li>
  <li><code>ProjectiveSpecialLinearGroup( [</code><var>filt</var><code>,
]</code><var>  d</var><code>, </code><var>q</var><code> )</code> </li>
  <li><code>ProjectiveGeneralUnitaryGroup( [</code><var>filt</var><code>,
]</code><var>  d</var><code>, </code><var>q</var><code> )</code> </li>
  <li><code>ProjectiveSpecialUnitaryGroup( [</code><var>filt</var><code>,
]</code><var>  d</var><code>, </code><var>q</var><code> )</code> </li>
  <li><code>ProjectiveSymplecticGroup( [</code><var>filt</var><code>, ]</code><var>
  d</var><code>, </code><var>q</var><code> )</code>             </li>
</ul>
        <br>
<b><a name="small"></a>
Группы малых порядков</b><br>
<br>
Библиотека групп малых порядков содержит все конечные группы, порядок которых
не превышает 2000, за исключением групп порядка 1024. Каждая группа из библиотеки
имеет свой номер, обозначающий ее тип изоморфизма. Этот номер имеет вид <b>
[n1, n2]</b>, где <b>n1</b> - порядок группы, <b>n2</b> - ее номер в каталоге
групп порядка <b>n1</b>. Группу, имеющую тип изоморфизма <b>[n1, n2]</b>,
можно вызвать из виблиотеки с помощью функции <b>SmallGroup</b>, например:<br>
   <br>
<tt>   gap&gt; S:=SmallGroup(16,8);<br>
   &lt;pc group of size 16 with 4 generators&gt;<br>
</tt>   <br>
С другой стороны, для многих групп возможно определение их типа изоморфизма
с помощью функции <b>IdGroup</b>. Так, например, группа диэдра порядка 8
может быть получена как группа с номером 3 из библиотеки групп порядка 8:<br>
   <br>
<tt>   gap&gt; D:=DihedralGroup(8);<br>
   &lt;pc group of size 8 with 3 generators&gt;<br>
   gap&gt; IdGroup(D);<br>
   [ 8, 3 ]<br>
</tt>   <br>
Для отбора групп из библиотеки используется функция <b>AllSmallGroups </b>
в комбинации с различными аргументами, первым из которых всегда является
<b>Size</b>, вторым - порядок требуемых групп). Далее могут быть записаны
другие пары аргументов, где в каждой паре первый аргумент - функция для отбора
групп, второй - ее требуемое значение. В следующем примере получается список
всех неабелевых групп порядка 64:<br>
   <br>
<tt>   gap&gt; l:=AllSmallGroups(Size,64, IsAbelian, false);;<br>
   gap&gt; Length(last);<br>
   256<br>
</tt>   <br>
Таким образом, существует 256 таких групп. Теперь с помощью функций работы
со списками выделим из них те, которые имеют класс нильпотентности 4 и циклический
коммутант:<br>
   <br>
   gap&gt; l:=Filtered(l, x -&gt; ( Length(LowerCentralSeries(x))=5 and IsCyclic(DerivedSubgroup(x))) 
 );;<br>
   gap&gt; Length(last);<br>
   16<br>
   <br>
   Таких групп уже 16. Теперь выделим из этих 16 групп только те, у которых
факторгруппа по коммутанту является елементарной абелевой группой:<br>
   <br>
<tt>   gap&gt; l:=Filtered(l, x -&gt; IsElementaryAbelian(x/DerivedSubgroup(x)));;<br>
   gap&gt; Length(last);<br>
   6<br>
</tt>   <br>
Всего получили шесть таких групп. Установим их тип изоморфизма:<br>
   <br>
<tt>   gap&gt; List(l, IdGroup);<br>
   [ [ 64, 186 ], [ 64, 187 ], [ 64, 188 ], [ 64, 189 ], [ 64, 190 ], <br>
     [ 64, 191 ] ] <br>
</tt>    <br>
Другие функции для работы с библиотекой конечных групп описаны в <a href="http://www-gap.dcs.st-and.ac.uk/%7Egap/Manual4/htm/ref/CHAP048.htm">
соответствующей главе</a>
 оригинального руководства по системе GAP.<br>
               
<hr width="100%"> <br>
        <i><font face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">
      Вернуться  к списку примеров</a>
        </font></font></i>         
</body>
</html>
