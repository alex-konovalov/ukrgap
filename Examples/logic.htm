<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
                                                                        
                      
  <meta http-equiv="content-type" content="text/html; charset=KOI8-R">
  <title>Вычисления в групповых кольцах с помощью пакета LAGUNA</title>
             
  <meta name="description"
 content="Calculations in group rings with LAGUNA package">
</head>
  <body>
                                               
<div align="left">  
<div align="left">  
<div align="left">  
<div align="left">   
<ul>
     <font face="Helvetica, Arial, sans-serif"><small>   </small></font>
  
</ul>
       <a href="http://www.zsu.zp.ua/ppages/konoval/konov.htm"><i><font
 face="Arial,Helvetica"><font size="-1"></font></font></i></a><i><font
 face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">Вернуться к
списку примеров</a></font></font></i>    
<hr width="100%" size="2">   </div>
        </div>
             
<center></center>
        </div>
                   
<div align="left"><b><small><font face="Helvetica, Arial, sans-serif"><br>
 </font></small></b> 
<div align="center"><font face="Times New Roman, Times, serif"><big><big><b><small>Элементы
математической логики</small></b></big></big></font><br>
  </div>
 </div>
     
<div align="center"><i>(материал разработан с участием студентки ЗГУ О.Ганюк)</i><br>
</div>
<br>
  В GAP имеются две логические константы - <small><b><big><tt>true</tt></big></b></small>
(истина) и <tt><b>false </b></tt>(ложь). Их значения можно присваивать переменным:<br>
<blockquote><b><tt>gap&gt; A:=true;<br>
true<br>
gap&gt; B:=false;<br>
false    <br>
  </tt></b></blockquote>
Система GAP позволяет определять истинность тех или иных выражений:<br>
<blockquote><tt><b>gap&gt; 2+2=5;<br>
false<br>
gap&gt; 1/2 in Integers; # 1/2 не содержится в множестве целых чисел<br>
false<br>
gap&gt; 15 mod 5 = 3;    # остаток от деления 15 на 5 не равен 3<br>
false<br>
gap&gt; 16 mod 5 = 1;    </b></tt><tt><b># остаток от деления 16 на 5 равен
1</b></tt><br>
  <tt><b>true<br>
gap&gt; 1+(1/10000) &gt; 1;<br>
true<br>
  </b></tt></blockquote>
Над логическими константами можно выполнять операции отрицания, конъюнкции
и дизъюнкции. Рассмотрим примеры вычисления для заданных выше переменных
<tt><b>А</b></tt> и <tt><b>В</b></tt>, равных соответственно <tt><b>true
</b></tt>и <b><tt>false</tt></b>.<br>
<blockquote><tt><b>gap&gt; A or B;<br>
true<br>
gap&gt; A and B;<br>
false<br>
gap&gt; not A;<br>
false<br>
gap&gt; not B;<br>
true<br>
  </b></tt></blockquote>
Для более сложного логического выражения зададим переменную <tt><b>С</b></tt>
со значением <tt><b>true</b></tt>:<br>
<blockquote><tt><b>gap&gt; C:=true;<br>
true<br>
gap&gt; (A and B) or C;<br>
true<br>
  </b></tt></blockquote>
Построим таблицу истинности для логических операторов <i><b>and</b></i> и
<i><b>or</b></i>. Сначала зададим список <tt><b>h</b></tt>, состоящий из
всевозможных комбинаций <tt><b>true </b></tt>и <tt><b>false</b></tt>, следующим
образом:
<blockquote><tt><b>gap&gt; h:=[[true,true],[true,false],[false,true],[false,false]];<br>
[ [ true, true ], [ true, false ], [ false, true ], [ false, false ] ]<br>
  </b></tt></blockquote>
Теперь будем перебирать все пары из этого списка с помощью цикла <tt><b>for</b></tt>
&#8230; <tt><b>od</b></tt>. Для каждой пары <tt><b>(x1,x2)</b></tt> выведем на
печать значение высказываний "А и В", "А или В", "не А", "не В" :    <br>
<blockquote><tt><b>gap&gt; for x in h do</b><br>
  <b>&gt; Print(x, "  ", x[1] and x[2], "  ", x[1] or x[2], "\n");</b><br>
  <b>&gt; od;</b><br>
  <b>[ true, true ]  true  true</b><br>
  <b>[ true, false ]  false  true</b><br>
  <b>[ false, true ]  false  true</b><br>
  <b>[ false, false ]  false  false</b></tt><br>
</blockquote>
Аналогичным образом построим таблицу истинности для импликации, с учетом
логического закона, выражающего ее с помощью отрицания и дизъюнкции :<br>
<blockquote><tt><b>gap&gt; for x in h do<br>
&gt; Print(x, "  ", not x[1] or x[2], "\n");<br>
&gt; od;<br>
[ true, true ]  true<br>
[ true, false ]  false<br>
[ false, true ]  true<br>
[ false, false ]  true<br>
  </b></tt></blockquote>
Следующие команды выводят на экран таблицу истинности для эквиваленции:  
 <br>
<blockquote><tt><b>gap&gt; for x in h do<br>
&gt; Print(x, "  ", (not x[1] or x[2]) and (not x[2] or x[1]), "\n");<br>
&gt; od;<br>
[ true, true ]  true<br>
[ true, false ]  false<br>
[ false, true ]  false<br>
[ false, false ]  true<br>
  </b></tt></blockquote>
Перебрать всевозможные значения элементарных высказываний, входящих в логическую
формулу, можно было бы более эффективно с использованием функции <tt><b>Tuples(list,
k)</b></tt>, которая возвращает список всевозможных упорядоченных наборов
длины <tt><b>k</b></tt> из элементов списка <b><tt>list</tt></b>.<br>
<br>
Например, список  <tt><b>h</b></tt> в предыдущем примере можно было создать
следующим образом:
<blockquote><tt><b>gap&gt; Tuples([true,false],2);</b></tt><br>
  <tt><b>[ [ true, true ], [ true, false ], [ false, true ], [ false, false
] ]</b></tt><br>
</blockquote>
Если в логическую формулу входят три элементарных высказывания, то нужно
создать список, состоящий из всевозможных упорядоченных троек, элементами
которых являются <tt><b>true</b></tt> и <tt><b>false</b></tt>:<br>
<blockquote><tt><b>gap&gt; s:=Tuples([true,false],3);</b><br>
  <b>[ [ true, true, true ], [ true, true, false ], [ true, false, true ],
  </b><br>
  <b>  [ true, false, false ], [ false, true, true ], [ false, true, false
], </b><br>
  <b>  [ false, false, true ], [ false, false, false ] ]</b></tt><br>
</blockquote>
Проверим, что элементов списка действительно 8:<br>
<blockquote><b><tt>gap&gt; Length(s);</tt><br>
  <tt>8</tt></b><br>
</blockquote>
С помощью этого списка проверим, например, истинность одного из законов де
Моргана. Для этого отдельно вычислим левую и правую части соответствующего
высказывания, и проверим, что их значения совпадают при любых значениях A,
B и C:<br>
<blockquote><big><tt><b><small>gap&gt; for x in s do<br>
&gt; Print(x, "  ", (x[1] or x[2]) and x[3], "  " ,<br>
&gt; (x[1] and x[3]) or (x[2] and x[3]), "\n");<br>
&gt; od;<br>
[ true, true, true ]  true  true<br>
[ true, true, false ]  false  false<br>
[ true, false, true ]  true  true<br>
[ true, false, false ]  false  false<br>
[ false, true, true ]  true  true<br>
[ false, true, false ]  false  false<br>
[ false, false, true ]  false  false<br>
[ false, false, false ]  false  false</small></b><br>
  </tt></big></blockquote>
В GAP есть также функции <tt><b>ForAll </b></tt>и <tt><b>ForAny</b></tt>,
позволяющие записывать высказывания для с применением кванторов, если множество
допустимых значений соответствующих переменных конечно. Например, составим
список <tt><b>primes</b></tt>, состоящий из первых восьми простых чисел:<br>
<blockquote><b><tt>gap&gt; primes:=[2,3,5,7,11,13,17,19];<br>
[ 2, 3, 5, 7, 11, 13, 17, 19 ]<br>
  </tt></b></blockquote>
Теперь мы можем проверить:<br>
а) действительно ли каждый элемент списка <tt><b>primes </b></tt>является
простым числом, применив функцию <tt><b>IsPrime</b></tt>:<br>
<blockquote><tt><b>gap&gt; ForAll(primes, IsPrime);<br>
true</b></tt><br>
</blockquote>
b) есть ли в списке элемент, остаток от деления которого на 2 равен 0 (т.е.
элемент, делящийся на 2):<br>
<blockquote><tt><b>gap&gt; ForAny(primes, x -&gt; x mod 2 = 0);<br>
true</b></tt><br>
</blockquote>
с) все ли элементы списка не делятся на 2:<br>
<blockquote><tt><b>gap&gt; ForAll(primes, x -&gt; x mod 2 &lt;&gt; 0);<br>
false</b></tt><br>
</blockquote>
d) есть ли в списке элементы, которые превосходят 20:<br>
<blockquote><tt><b>gap&gt; ForAny(primes, x -&gt; x &gt; 20);<br>
false</b></tt></blockquote>
 
<div align="center"><br>
     
<hr width="100%" size="2"></div>
  </div>
  <a href="http://www.zsu.zp.ua/ppages/konoval/konov.htm"><i><font
 face="Arial,Helvetica"><font size="-1"></font></font></i></a><i><font
 face="Arial,Helvetica"><font size="-1"><a href="Examples.htm">Вернуться к
списку примеров</a></font></font></i><br>
  <br>
 <br>
</body>
</html>
