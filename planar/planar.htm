<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta content="text/html; charset=KOI8-R" http-equiv="content-type">
<title>PLANAR - testing graphs for planarity</title>
</head>
<body>
<div align="center">
<h3>PLANAR - проверка планарности графа</h3>
Иван Тищенко, Запорожский национальный университет<br>
</div>
<div align="justify">
<p>Программа <b>PLANAR</b> разработана с помощью системы компьютерной
алгебры <b>GAP</b> [1] и пакета <b>GRAPE</b> [2] и 
предназначена для проверки планарности связных графов.
Если нужна предварительная проверка того, что граф является связным, 
то ее можно выполнить с помощью функции 
<tt><b>IsConnectedGraph</b></tt> из пакета <b>GRAPE</b> [2].
Кроме того, граф должен быть неориентированным и не должен иметь
кратных ребер и петель (заметьте, что эти свойства графа не отражаются
на его планарности).<br>
Для корректной работы программы запустите <b>GAP</b> из каталога, в
котором лежит <b>PLANAR</b>. Для начала работы с программой задайте
команду <tt><b>Read(&#8220;init.g&#8221;);</b></tt></p>
<p><tt><b>gap&gt; Read("init.g");<br>
#I Package `GRAPE': non-Unix architecture or binaries not compiled<br>
#I Package `GRAPE': functions depending on nauty will not work<br>
<br>
Loading GRAPE 4.3 (GRaph Algorithms using PErmutation groups),<br>
by L.H.Soicher@qmul.ac.uk.<br>
<br>
PLANAR<br>
gap&gt; </b></tt>
</p>
<p>Основными функциями данной программы являются <tt><b>IsPlanar(G)</b></tt>
и <tt><b>IsPlanarByMcLane(G)</b></tt>.
Функция <tt><b>IsPlanarByMcLane (G)</b></tt> проверяет связный граф на
планарность с помощью критерия Мак-Лейна. При этом 
<tt><b>IsPlanarByMcLane(G)</b></tt> перебирает всевозможные базисы 
подпространства циклов.
Данный перебор при большом количестве рёбер может занять много
времени. В связи с этим была разработана функция <tt><b>IsPlanar(G)</b></tt>,
которая при выборе базисов использует структурные числа [3].
Хотя целью разработки <b>PLANAR</b> являлись описанные выше функции,
в процессе их написания был разработан ряд вспомогательных
функций, которые могут представлять независимый интерес.
Ниже будут изложены описания данных функций.
</p>
<p>Функция <tt><b>GraphByMat(m)</b></tt> задаёт граф по его матрице
смежности m.
</p>
<p><tt><b>gap&gt; m:=[[0,1,0,1],[1,0,1,0],[0,1,0,1],[1,0,1,0]];<br>
[ [ 0, 1, 0, 1 ], [ 1, 0, 1, 0 ], [ 0, 1, 0, 1 ], [ 1, 0, 1, 0 ] ]<br>
gap&gt; H:=GraphByMat(m);<br>
rec( isGraph := true, order := 4, group := Group(()), <br>
&nbsp; schreierVector := [ -1, -2, -3, -4 ], <br>
&nbsp; adjacencies := [ [ 2, 4 ], [ 1, 3 ], [ 2, 4 ], [ 1, 3 ] ], <br>
&nbsp; representatives := [ 1, 2, 3, 4 ], names := [ 1, 2, 3, 4 ] )<br>
</b></tt></p>
<p>Проверим граф H на планарность.
</p>
<p><tt><b>gap&gt; IsPlanar(H);<br>
true<br>
gap&gt; IsPlanarByMcLane(H);<br>
Generating 1 combinations ... OK <br>
true<br>
</b></tt></p>
<p>Функция <tt><b>GraphByEdges(t)</b></tt> задаёт граф по списку <tt><b>t</b></tt>
его рёбер.
</p>
<p><tt><b>gap&gt;
t:=[[1,2],[2,4],[4,1],[2,5],[4,5],[5,6],[6,1],[6,2],[6,3]];<br>
[ [ 1, 2 ], [ 2, 4 ], [ 4, 1 ], [ 2, 5 ], [ 4, 5 ], [ 5, 6 ], [ 6, 1 ],
<br>
&nbsp; [ 6, 2 ], [ 6, 3 ] ]<br>
gap&gt; D:=GraphByEdges(t);<br>
rec( isGraph := true, order := 6, group := Group(()),<br>
&nbsp; schreierVector := [ -1, -2, -3, -4, -5, -6 ], <br>
&nbsp; adjacencies := [ [ 2, 4, 6 ], [ 1, 4, 5, 6 ], [ 6 ], [ 1, 2, 5
], <br>
&nbsp; &nbsp; [ 2, 4, 6 ], [ 1, 2, 3, 5 ] ], representatives := [ 1, 2,
3, 4, 5, 6 ], <br>
&nbsp; names := [ 1, 2, 3, 4, 5, 6 ] )<br>
</b></tt></p>
<p>Функция <tt><b>CompleteGraphByOrder(n)</b></tt> задаёт полный граф
порядка <tt><b>n</b></tt>. </p>
<p><tt><b>gap&gt; C:=CompleteGraphByOrder(7);<br>
rec( isGraph := true, order := 7, group := Group(()), <br>
&nbsp; schreierVector := [ -1, -2, -3, -4, -5, -6, -7 ], <br>
&nbsp; adjacencies := [ [ 2, 3, 4, 5, 6, 7 ], [ 1, 3, 4, 5, 6, 7 ], <br>
&nbsp; &nbsp; [ 1, 2, 4, 5, 6, 7 ], [ 1, 2, 3, 5, 6, 7 ], [ 1, 2, 3, 4,
6, 7 ], <br>
&nbsp; &nbsp; [ 1, 2, 3, 4, 5, 7 ], [ 1, 2, 3, 4, 5, 6 ] ], <br>
&nbsp; representatives := [ 1, 2, 3, 4, 5, 6, 7 ], <br>
&nbsp; names := [ 1, 2, 3, 4, 5, 6, 7 ] )<br>
</b></tt></p>
<p>Проверим граф С на планарность.
</p>
<p><tt><b>gap&gt; IsPlanar(C);<br>
false<br>
gap&gt; IsPlanarByMcLane(C); <br>
false<br>
</b></tt></p>
<p>Функция <tt><b>SimpleCycles(G,a,b)</b></tt> возвращает все простые
циклы, проходящие по ребру <tt><b>[a,b]</b></tt> графа <tt><b>G</b></tt>.
</p>
<p><tt><b>gap&gt; s:=SimpleCycles(G,1,3);<br>
[ [ 1, 2, 3 ], [ 1, 3, 2, 4 ], [ 1, 3, 5, 4 ], [ 1, 3, 2, 6 ], [ 1, 3,
7, 6 ] ]<br>
</b></tt></p>
<p>Функция <tt><b>SimpleCyclesForVertex(G,a)</b></tt> возвращает все
простые циклы, проходящие через вершину <tt><b>a</b></tt> графа <tt><b>G</b></tt>.
</p>
<p><tt><b>gap&gt; s:=SimpleCyclesForVertex(G,7);<br>
[ [ 1, 3, 7, 6 ], [ 2, 3, 7 ], [ 2, 3, 7, 6 ], [ 2, 6, 7 ] ]<br>
</b></tt></p>
<p>Функция <tt><b>TauCycles(G)</b></tt> возвращает единичные циклы
графа и добавляет их в запись графа.
</p>
<p><tt><b>gap&gt; tau:=TauCycles(G);<br>
[ [ 1, 2, 3 ], [ 1, 2, 4 ], [ 1, 2, 6 ], [ 1, 3, 5, 4 ], [ 1, 3, 7, 6
], <br>
&nbsp; [ 2, 3, 5 ], [ 2, 3, 7 ], [ 2, 4, 5 ], [ 2, 6, 7 ] ]<br>
</b></tt></p>
<p>Функция <tt><b>MackLane(m)</b></tt> вычисляет функционал Мак-Лейна
от матрицы <tt><b>m</b></tt>.
</p>
<p><tt><b>gap&gt; j:=MackLane(m);<br>
40<br>
</b></tt></p>
<p>Функция <tt><b>TreeOfGraph(G)</b></tt> возвращает список ребер
дерева графа <tt><b>G</b></tt>.
</p>
<p><tt><b>gap&gt; T:=TreeOfGraph(G);<br>
[ [ 1, 2 ], [ 2, 3 ], [ 2, 4 ], [ 2, 5 ], [ 2, 6 ], [ 2, 7 ] ]<br>
</b></tt></p>
<p>Также в программе <b>PLANAR</b> были реализованы структурные числа
и операции над ними.
Функция <tt><b>StructuralNumber(m)</b></tt> задает структурное число, 
где <tt><b>m</b></tt> &#8211; матрица, которая не имеет одинаковых столбцов
(при этом столбцы нужно рассматривать, как неупорядоченные множества),
а столбцы, в свою очередь, не имеют одинаковых элементов [3].
Были инсталлированы следующие методы:
</p>
<p>&#8211; сравнение структурных чисел;<br>
&#8211; сложение структурных чисел; <br>
&#8211; умножение структурных чисел. <br>
</p>
<tt><b>
</b></tt>
<p><tt><b>gap&gt; sn1:=StructuralNumber([[1,2,3],[3,9,1],[5,7,9]]);<br>
[ [ 1, 1, 2 ],<br>
&nbsp; [ 3, 3, 7 ],<br>
&nbsp; [ 5, 9, 9 ] ]<br>
</b></tt></p>
<p><tt><b>gap&gt; sn2:=StructuralNumber([[8,4,3],[3,9,1],[5,7,9]]);<br>
[ [ 1, 3, 4 ],<br>
&nbsp; [ 3, 5, 7 ],<br>
&nbsp; [ 9, 8, 9 ] ]<br>
</b></tt></p>
<p><tt><b>gap&gt; sn1=sn2;<br>
false<br>
gap&gt; sn1+sn2;<br>
[ [ 1, 2, 3, 4 ],<br>
&nbsp; [ 3, 7, 5, 7 ],<br>
&nbsp; [ 5, 9, 8, 9 ] ]<br>
</b></tt></p>
<p><tt><b>gap&gt; sn1*sn2;<br>
[ [ 1, 2 ],<br>
&nbsp; [ 3, 3 ],<br>
&nbsp; [ 4, 5 ],<br>
&nbsp; [ 5, 7 ],<br>
&nbsp; [ 7, 8 ],<br>
&nbsp; [ 9, 9 ] ]<br>
</b></tt></p>
<p><tt><b>gap&gt; sn1<sn2 ;=""><br>
true<br>
gap&gt; sn1&gt;sn2;<br>
false<br>
gap&gt;<br>
</sn2></b></tt></p>
<br>
Для получения <b>PLANAR</b> загрузите и разархивируйте один из
следующих файлов: <a href="planar.zip">planar.zip</a> или 
<a href="planar.zip">planar.tar.gz</a>.
<br>
<br>
<p>
<b>
<center>ПЕРЕЧЕНЬ ССЫЛОК</center>
</b></p>
<p>1. The GAP Group, GAP - Groups, Algorithms, and Programming, Version
4.4.9; 2006 (<a href="http://www.gap-system.org">http://www.gap-system.org</a>).<br>
2. L.H. Soicher, The GRAPE package for GAP, Version 4.3, 2006,
<a href="http://www.maths.qmul.ac.uk/~leonard/grape/">http://www.maths.qmul.ac.uk/~leonard/grape/</a>.<br>
3. Курапов С.В., Савин В.В. Векторная алгебра и рисунок графа. &#8211;
Запорожье: ЗГУ, 2003. &#8211;200 с.<br>
</p>
<i>Март 2007</i>
</body>
</html>